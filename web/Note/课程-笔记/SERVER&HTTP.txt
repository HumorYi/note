
第一天:
一、SERVER&HTTP
   -学习SERVER的原因：
      1、招聘(有要求)：Web前端-熟悉了解
      2、工作：与服务器端人员配合
      3、学习：掌握或了解Web应用的整体架构
   -服务器概念：
      -服务器(SERVER)其实就是一台PC机(硬件)
      -服务器的分类：
         1、硬件服务器：PC机--个人
	    电脑硬件：PC机、小型机、刀片机、中型机、大型机、超级计算机
	    小型机：IBM(AIX)、HP(做得不好，现在比较少人用)、联想(Linux)
	 2、软件服务器：中间件-为了运行Web引用的一种软件--开发人员
	    Web(应用)服务器：用于运行Web应用
	    数据库服务器：用于运行数据库产品
      -软件架构：
         -B/S：浏览器(browser)/服务器(server)--是被提出用于替代C/S架构的
	    -互联网：网易、腾讯、百度等
	    -企业级：银行系统、医院系统等
	 -C/S：客户端(client)/服务器(server)--先出现，当时网络带宽、电脑硬件普遍偏低，B/S体验不好，所以C/S先出现
	    例如：QQ、Email等架构(升级时客户端/服务器端都要升级，而且客户端不能被强制升级导致版本众多)--需要安装客户端的软件
      -访问Web应用：http://www.baidu.com
                    网络协议-IP地址-端口号
二、 XAMPP软件
   -Apache：软件服务器(运行PHP)
      1、启动失败：
         -提示信息：Error: Apache shutdown unexpectedly.
	 -解决：config选项--><Browse>[Apache]-->conf目录-->httpd.conf文件-->修改::Listen 80-->9999(端口号)(80是默认端口号)
         -如何访问：http://localhost:端口号   http://127.0.0.1:端口号
      2、设置虚拟地址：
         -目录：C:\Windows\System32\drivers\etc-->打开hosts文件-->设置虚拟地址：127.0.0.1 www.baidu.com(自定义地址)
      3、关于80端口号：
         -在开始菜单输入"cmd"运行命令行窗口
         -在命令行窗口输入命令：netstat -ano，找到占用80端口号对应PID值
         -在任务管理器中的"进程",找到对应的进程,结束
      4、在本地搭建Web应用程序：
         -进入XAMPP软件的根目录中的htdocs文件夹
         -将该目录的所有文件删除(我自己是建一个文件夹保存)
         -创建index.html页面文件(必须以index.html这个文件名命名)--这个页面文件里的内容就是显示在浏览器中的内容
         -重新在浏览器中访问虚拟地址,页面内容--例如：www.baidu.com:9999
   -MySQL：数据库服务器(运行MySQL)
      -MySQL默认使用的端口号：3306-->不建议修改该端口号
      -命令行方式登录(打开)数据库：
         -登录数据库：mysql -u用户名 -p密码-->例如：mysql -uroot(root是默认用户名，默认是没有密码的)
         -退出数据库：exit;
      -同时启动Apache和MySQL服务
         -访问地址：http://localhost:9999/phpmyadmin  也可以写为：http://www.baidu.com:9999/phpmyadmin
	    上述地址的端口号是Apache的端口号，同时也可以使用自己设置的虚拟地址访问
         -phpMyAdmin服务是Apache提供的(连接数据库)
   -Tomcat：软件服务器(运行Java)
三、数据库
   -基本概念：数据仓库,用于存储或操作数据内容
      1、两大阵营
         -关系型数据库(SQL)：是目前主流数据库--是以表(行和列)的形式存储数据
         -非关系型数据库(NoSQL)：是新潮流数据库--是以文档方式存储数据，是以key:value形式存储数据
      2、NoSQL：是一种运动(抗议关系型数据库)
         逐步发展之后，出现很多这种产品，其主流的产品：mongoDB-JSON格式
      3、关系型数据库：简单来说就是表格(行和列)
         -Oracle：甲骨文(Oracle)公司的产品--目前企业级开发98%市场份额都是使用这款产品
	    Oracle认证：初级--月薪10K - 15K，中级--月薪15K - 20K，高级(一般一人多职，被抢这要的人才)
         -MySQL：甲骨文(Oracle)公司的产品--目前互联网开发98%市场份额都是使用这款产品
         -SQL Server--是微软公司推出的，只提供Windows操作系统版本
         -Access(Office套件的组件)--是微软公司推出轻量级数据库，现在几乎没人使用
         -DB2
   -MySQL产品：是瑞典MySQL AB公司开发的，后期被SUN公司收购(SUN公司最主要产品-Java)，SUN公司被Oracle公司收购
      -特点：免费，开源
      -目前两种版本：
         -社区版本 - 免费
	 -商业版本 - 收费
   -LAMP组合：目前开发互联网网站的主要软件(都免费)
      -L：Linux
      -A：Apache
      -M：MySQL
      -P：PHP
   -SQL语言：应用在各种数据库产品中的语言
      -DDL：数据定义语言(数据库+表)
      -DCL：数据控制语言(权限)
      -DQL：数据查询语言(查询)
      -DML：数据操作语言(增删改功能)
      注意：
         -SQL语言并不区分大小写(官方建议大写)--工作上大部分要求大写
	 -SQL语句编写完毕后，一定要增加结束符分号";"--命令行中(rmd)--建议图形化界面中也是用结束符
	 -SQL语言使用字符串时,建议使用单引号'
   -DDL(了解) - CREATE(创建)|ALTER(修改)|DROP(删除)
      -数据库操作
         1、创建数据库：CREATE DATABASE 数据库名称 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
         2、查看数据库：SHOW DATABASES;
         3、修改数据库：ALTER DATABASE 数据库名称 CHARACTER SET utf8;
         4、删除数据库：DROP DATABASE 数据库名称;
         5、使用(切换)数据库：USE 数据库名称;
         注意：数据库一旦被创建,很少修改或删除，一般只是创建、查看和切换数据库
      -数据表操作
         1、数据类型
            -数值(Number)数据类型
	       -INT：整数
	       -FLOAT/DOUBLE：浮点型(小数)
	       -DECIMAL：精确值(金额等)
            -日期(Date)数据类型
	       -DATE：日期(默认格式:yyyy-MM-dd)
	       -DATETIME：日期时间(yyyy-MM-dd hh:mm:ss)
	       -TIMESTAMP：时间戳(标识:唯一)(yyyy-MM-dd hh:mm:ss)
            -字符串(String)数据类型
	       -CHAR ：长度固定的字符串--定义一个字符串的长度为10,实际存储的内容为"abc",未被字符占用的位置会以空格补位
	       -VARCHAR：长度可变的字符串--定义一个字符串的长度为10,实际存储的内容为"abcde",没有补位
         2、创建数据表：CREATE TABLE (字段名称1  数据类型,字段名称2  数据类型, ...);
            -主键约束：PRIMARY KEY--作用：唯一,不可重复
            -主键自增约束：AUTO_INCREMENT--作为主键的字段,自增
	    例如：创建用户表(id,name,pwd,age,email,addr)
		CREATE TABLE myuser (
		   id  INT PRIMARY KEY AUTO_INCREMENT,//标识(唯一,不可重复)
		   name  VARCHAR(30),
		   pwd	 VARCHAR(30),
		   age   INT,
		   email VARCHAR(30),
		   addr  VARCHAR(30)
		);
		 练习:创建订单表myorder(orderid,ordername,price,addr,ordertime)
		 * orderid - 订单表的标识(唯一)
		 * ordername - 订单表的名称
		 * price - 金额
		 * addr - 收货地址
		 * ordertime - 订单日期
	 3、修改数据表：
            -修改表名：ALERT TABLE 旧表名 RENAME [TO] 新表名;
            -修改字段的数据类型：ALERT TABLE 表名 MODIFY 字段名 数据类型;
            -修改字段名：ALERT TABLE 表名 CHANGE 旧字段名 新字段名 新数据类型;
            -添加字段：ALERT TABLE 表名 ADD 新字段名 数据类型 [约束条件][FIRST|AFTER 已存在字段名];
         4、查看表结构：DESC 表名;
         5、删除数据表：DROP TABLE 表名;
   -DML(增删改) - INSERT|UPDATE|DELETE
      1、插入(新增)数据
         -用法一：INSERT INTO 表名 VALUES(字段值1,字段值2,...);
	    注意：当前表具有多少字段,VALUES输入多少字段值，如果哪个字段是主键自增的话,使用NULL补位
         -用法二：INSERT INTO 表名(字段名1,字段名2,...) VALUES(字段值1,字段值2,...);
	    注意：表名后定义多少字段,VALUES后输入多少字段，当前数据表的字段是允许为空的
         * 练习 - myorder表
            1. 插入orderid,ordername,price,addr,ordertime
	       INSERT INTO myorder VALUES(NULL,'linghuchong',3.5,'huashan','2015-11-17 15:44:40')
	    2. 插入ordername,addr,ordertime字段值
	       INSERT INTO myorder(ordername,addr,ordertime) VALUES('renyingying',10,'heimuya')
      2、更新(修改)数据
         -用法一：UPDATE 表名 SET 字段名=字段值;
            注意：修改所有数据(指定字段值)
         -用法二：UPDATE 表名 SET 字段名=字段值 WHERE 字段名=字段值;
            注意：SET后面的"字段名=字段值",为设置的值，WHERE后面的"字段名=字段值",为查询的值
         -用法三：UPDATE 表名 SET 字段名1=字段值1,字段名2=字段值2 WHERE 字段名=字段值;
	    练习:修改myorder表
		 -修改addr字段值为"光明顶"
		   UPDATE myorder SET addr='光明顶';
		 -修改id为2记录的price修改为100
		   UPDATE myorder SET price=100 WHERE orderid=2;
		 -修改addr为"光明顶"记录的ordertime为"2020-11-11 00:00:00"
		   UPDATE myorder SET ordertime='2020-11-11 00:00:00' WHERE addr='光明顶'
      3、删除数据
         -用法一：DELETE FROM 表名;--注意：删除指定表中所有数据
         -用法二：DELETE FROM 表名 WHERE 字段名=字段值;--注意：删除指定表中指定字段中的数据
         -问题--实际操作：实际的开发中基本不使用DELETE语句，以防我们的用户反悔数据不能回复
      4、SQL操作(删除)
         -物理删除：执行DELETE语句
         -逻辑删除：简单来说,对于用户来讲是删除的,对于实际来讲并没有删除
	    为指定表,增加一个字段(state|status),表示当前这条记录是什么状态
	       值为1的话,表示这条记录是正常的
	       值为0的话,表示这条记录是删除的
   -DQL(查)
      1、基本查询：
         -用法一 - SELECT * FROM 表名;
         -用法二 - SELECT 字段名1,字段名2,... FROM 表名;
         注意：面试会问使用哪种方法查询好？新版本中两种方法的查询速度一样，所以选用方法一
      2、条件基本查询： SELECT * FROM 表名 WHERE 字段名=字段值;
      3、复杂条件查询
         -AND：表示多个条件同时满足
         -OR：表示其中一个条件满足
         -IN(SET)：表示一个字段包含多个值
         -SET：多个值,之间使用","
         -=：表示字段值为指定值
         -BTWEEN AND：等于 >= AND <=
         -IS NULL：匹配NULL值
      4、排序查询：ORDER BY 字段名
         -ASC：正序排序,默认值
         -DESC：倒序排序
         -语法：SELECT * FROM 表名 WHERE 条件 ORDER BY 字段名 [ASC/DESC];
	     练习 - myorder
	       1. 查询addr为"光明顶"的所有记录
		  SELECT * FROM myorder WHERE addr='光明顶';
	       2. 查询id为1或ordername为"renyingying"的所有记录
		  SELECT * FROM myorder WHERE id=1 OR ordername='renyingying';
	       3. 查询id为1,2,3的所有记录
		  SELECT * FROM myorder WHERE id in(1,2,3);
    -命令行方式登录MySQL
       -输入mysql命令,提示"mysql"不是内部命令
       -原因：系统环境变量中没有配置MySQL的变量
       -解决：进入到MySQL的安装目录中，进入到bin目录中,找到mysql.exe文件，执行mysql.exe文件，在命令行中输入命令
         -cd mysql的安装目录/bin
	 -mysql命令
   注意：
      1、数据库操作原则--只增不删
      2、数据库的空
         -''"：空字符串
         -NULL：值不存在

第二天：
一、PHP语言：类似于JavaScript语言
   -PHP语言和JavaScript语言的区别：
      -PHP语言是服务器端的脚本语言
      -JavaScript语言是客户端(HTML)脚本语言
      注意：PHP文件(PHP代码)是不能直接右键使用浏览器打开的，而是应该运行在服务器(Apache)上的
   -PHP文件允许写入的内容：允许编写HTML代码和PHP代码
   -PHP页面和HTML5页面的区别：
      -HTML5页面：静态页面--静态资源：HTML，CSS，JavaScript
      -PHP页面：动态网页--动态资源：根据用户的操作，动态变化
   -创建PHP文件：
      1、创建PHP文件：文件的扩展名是".php"便可
      2、如何编写PHP代码：是以"<?php"开始，并且以"?>"结束的代码
      3、使用echo进行输出
   -PHP语法：
      1、常量与变量：
         -常量：一旦定义并初始化，值不会改变--两种中记一种便可以
	    -const 常量名=常量值;
	    -define(常量名,常量值);
	 -变量："$"符号只是表示当前定义的是变量--$变量名=变量值;
      2、数据类型：
         -四种标量类型
            -boolean：布尔类型
            -integer：数值类型(整型)
            -float/double：数值类型(浮点型)
            -string：字符串
	       -''-定义固定字符串，性能比较高
	       -"" - 可以识别变量名的，性能相对低(有匹配的过程)
         -两种复合类型
            -array：数组
            -object：对象
         -两种特殊类型
            -resource：资源--用于保存外部资源的一个引用
	       使用场景：在文件上传中,保存上传的文件
            -NULL
      3、运算符：基本与javascript的元素符保持一致
         注意：字符串连接符用点号"."，在实际开发中很少使用，一般用双引号""
      4、循环结构
         -while
         -do...while
         -for
         -foreach：foreach(数组 as key => value){}
      5、分支结构
         -if...else if...else
         -switch...case
      6、break与continue的区别
         -break：结束循环
         -continue：结束本次循环
二、PHP预定义
   -预定义变量
      -$_GET：接收客户端以请求类型为GET方法发送的数据内容
      -$_POST：接收客户端以请求类型为POST方法发送的数据内容
      -$_REQUEST：$_GET、$_POST等
      -$_FILES：专门用于文件上传
      -$_COOKIE：接收客户端保存的Cookie数据
   -预定义函数
      -数据库扩展 
   -PHP连接MySQL数据库
      1、准备工作：
         -在XAMPP根目录-->php文件夹-->ext文件夹中：存在php_mysql.dll和php_mysqli.dll这两个文件
	 -在XAMPP根目录-->php文件夹-->php.ini(php主配文件)文件中：存在extension=php_mysql.dll和extension=php_mysqli.dll这两条语句
	 -在php中配置有关MySQL数据库
      2、PHP如何连接MySQL数据库
         -过程化风格
            1、建立与MySQL数据库的连接：$conn = mysqli_connect(host,username,passwd,dbname,port);
	       -host：MySQL数据库所在电脑的IP地址
	       -username：登录MySQL数据库的用户名
	       -passwd：登录MySQL数据库的密码
	       -dbname：登录的数据库名称
	       -port：MySQL数据库的端口号
	       -该方法返回MySQL数据库的连接对象$conn
            2、定义SQL语句：$sql = "";
            3、发送SQL语句到MySQL数据库：$result = mysqli_query($conn,$sql);
	       该方法返回执行SQL语句的结果
            4、 (可选)解析结果集对象
               结果集对象： mysqli_result对象
            5、关闭与MySQL数据库的连接：mysqli_close($conn)
         -面向对象风格
            1、创建mysqli或mysql对象：$mysqli = new mysqli(host,username,passwd,dbname,port);
	       相当于与MySQL数据库建立连接
            2、定义SQL语句：$sql = "";
            3、调用mysqli对象的query()方法,向MySQL数据库发送SQL语句：$mysqli->query($sql);
            4、如果SELECT语句,解析mysqli_result对象
            5、调用mysqli对象的close()方法,关闭与MySQL的连接
         -中文乱码问题
            1、过程化结构：执行mysqli_query($conn,'SET NAMES UTF8');
            2、面向对象结构：执行$mysqli->query('SET NAMES UTF8');
         -结果集对象：执行SELECT语句
            -属性：
               -num_rows：记录数量
               -field_count：字段数量
            -方法
               -mysqli_fetch_array(结果集对象)--返回数组
               -mysqli_fetch_object(结果集对象)--返回object
 * 案例 - 开发完整的Web应用(客户端|服务器端|数据库)
   * 用户登录功能
   * 用户注册功能
     * 先查询用户名是否存在
       SELECT * FROM 表名 WHERE name=用户名
       * $result->num_rows - 0(不存在)
       * $result->num_rows - 不为0(存在)
     * 再插入数据内容
      