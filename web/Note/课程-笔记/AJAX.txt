第一天：
一、AJAX:
   -基本内容
      1、同步交互与异步交互
         -同步交互：客户端向服务器端发送请求,到服务器端进行响应,这个过程中,用户是不能做任何其他事情(等).
         -异步交互：客户端向服务器端发送请求，直到服务器端进行响应，这个过程中，用户可以做任何其他事情(不等)
      2、AJAX：Asynchronous JavaScript and Xml，直译中文：javascript和XML的异步
         -(不严格的定义)客户端与服务器端进行交互,而无需刷新当前页面的技术,称之为Ajax
         -Ajax实现的是B/S架构下的异步交互
         -AJXA不严格定义的原因是其他元素能实现异步交互的技术：<iframe src="">元素
      3、同步与异步的区别
         -同步交互：执行速度相对比较慢，响应的是完整的HTML页面
         -异步交互：执行速度相对比较快，响应的是部分数据
      4、***Ajax具有核心对象***：XMLHttpRequest对象
   -创建XMLHttpRequest对象：固定写法-一定要能手写出来
      function getXhr(){
         // 声明XMLHttpRequest对象
         var xhr = null;
         // 根据浏览器的不同情况进行创建
         if(window.XMLHttpRequest){
            // 表示除IE外的其他浏览器
	    xhr = new XMLHttpRequest();
         }else{
            // 表示IE浏览器
	    xhr = new ActiveXObject('Microsoft.XMLHttp');
         }
      return xhr;
      }
      // 创建核心对象
      var xhr = getXhr();
   -Ajax的核心对象
      -属性
         -readyState
         -status
      -方法
         -open()：与服务器端建立连接
         -send()：向服务器端发送请求
      -事件：onreadystatechange事件--作用是监听服务器端的通信状态改变
二、实现Ajax的异步交互
   -实现Ajax的异步交互步骤
      -创建XMLHttpRequest核心对象--固定写法，独立编写
      -与服务器端建立连接：使用XMLHttpRequest对象的open(method,url)方法
         -method：设置当前请求的类型
         -url：设置当前请求的地址
      -向服务器端发送请求：使用XMLHttpRequest对象的send(请求参数)方法
         -请求参数的格式：key=value
      -接收服务器端的响应数据
         -使用XMLHttpRequest对象的onreadystatechange事件,监听服务器端的通信状态
         -使用XMLHttpRequest对象的readyState属性,判断服务器端的当前状态(0-4)
         -使用XMLHttpRequest对象的status属性,判断服务器端的状态码(200)
         -使用XMLHttpRequest对象的responseText属性,接收服务器端的响应数据
   -XMLHttpRequest对象中GET与POST的区别
      -GET请求类型：send()方法不起作用,但是不能被省略--xhr.send(null);
         -请求参数：添加到URL?key=value
      -POST请求类型：send()方法起作用
         -在send()方法被调用前,使用setRequestHeader()方法设置请求头信息
         xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");--固定写法，要求能手写出来
   -使用Ajax的原则：小则怡情,大则伤身
   -另一种实现Ajax的步骤
      -创建XMLHttpRequest对象
      -注册监听
      -建立连接
      -发送请求
   -实现Ajax的六步是什么?(不标准)
      -创建XMLHttpRequest对象
      -建立连接
      -发送请求
      -注册监听 - onreadystatechange事件
      -获取服务器端的通信状态 - readyState
      -获取服务器端的状态码

第二天：
一、接收服务器端的响应数据
   -使用XMLHttpRequest核心对象的responseText属性
   -该属性只能接收文本(HTML)格式
   存在问题：解析过程比较复杂(拆串)，拆串或拼串极容易出错
二、XML格式
   -基本内容
      1、HTML、XHTML、DHTML和XML的区别
         -HTML就是网页 - 元素定义大小写
         -XHTML就是严格意义的HTML - 元素定义小写
         -DHTML - BOM|DOM
         -XML - 配置文件|数据格式
      2、XML文件的扩展名为".xml"
      3、XML的定义方式与HTML非常相似：HTML的元素预定义好的，XML允许自定义元素
      4、XML的版本
         -1.0版本：目前唯一版本
         -1.1版本：几乎没有人使用
         注意：版本已经不会再更新
      5、XML的作用：作为数据格式-存储数据
   -XML语法
      1、声明：<?xml version="1.0" encoding="UTF-8" ?>
         -version：设置当前XML文件的版本
         -encoding：设置当前XML文件的编码
         注意：出现在0行0列上
      2、定义元素
         -根元素：必须是起始标签，只能定义一个
         -定义元素：元素名可以自定义
	 -分类：起始标签或单标签
     * 定义属性
     * 定义注释
   -DOM解析XML
      -创建XML的解析器：固定写法，但是更新较快，要时常跟进
       function parseXML(xml){
          // 声明解析XML后的DOM对象
	  var xmlDoc = null;
	  // 根据不同的浏览器
	  if(window.DOMParser){
	     // 其他浏览器
	     var parser = new DOMParser();
	     xmlDoc = parser.parseFromString(xml,"application/xml");
	  }else{
	     // IE浏览器
	     xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
	     xmlDoc.async = false;
	     xmlDoc.loadXML(xml);
	  }
	  return xmlDoc;
       }
      -解析XML与解析HTML一致：很少使用ById和ByName两个方法
      注意：浏览器不允许读取外部的XML文件，浏览器解析符合XML格式的字符串
   -Ajax中的XML格式
      1、请求的数据格式-XML
         -客户端如何构建符合XML格式的数据
            -构建的数据类型：字符串(string)类型
            -字符串的内容符合XML格式的语法要求
         -服务器端如何接收符合XML格式的数据
            -接收客户端的请求数据：字符串(string)类型
            -PHP集成了DOM的相关内容：DOMDocument类、DOMElement类、DOMNode类
      2、响应的数据格式-XML
         -服务器端如何构建符合XML格式的数据
            -设置服务器端的响应头"Content-Type"值为"text/xml"
            -构建符合XML格式数据内容
	       -手动方式构建字符串(string)内容
	       -DOMDocument对象的方法：loadXML(符合XML格式的字符串)、saveXML()方法进行响应
         -客户端如何接收符合XML格式的数据
            -使用XMLHttpRequest对象的responseXML属性接收
            -接收回来的就是XML DOM对象(不需要使用XML解析器进行解析)
            -直接使用DOM解析XML DOM对象即可
三、JSON格式：JavaScript Object Notation(JS原生支持)
   -基本内容
      -JSON数据格式源于javascript
      -特点：易于程序员阅读和编写、易于计算机解析和生成
      -JSON目前是网络上使用最广泛的数据格式之一
   -JSON的结构
      -Array：数组
      -Object：对象
      -支持的数据类型
         -String字符串
         -Number数值
         -Boolean：true|false
         -Object
         -Array
         -null
   -Ajax中的JSON格式
      -请求格式为JSON
         -客户端向服务器端发送请求为JSON格式的数据
            -构建符合JSON格式的字符串
            -保证定义字符串时,使用单引号(里面使用双引号)
         -服务器端接收JSON格式的数据
            -接收客户端的数据
            -使用json_decode()函数进行解析：json_decode($json,true)
      -响应格式为JSON
         -服务器端向客户端发送响应为JSON格式的数据：使用json_encode()函数将PHP变量(array)转换成符合JSON格式的字符串
         -客户端接收JSON格式的数据
            -使用XMLHttpRequest对象的responseText属性接收：没有responseJSON属性
            -使用eval()函数进行转换
重点面试内容：HTML(文本格式)、XML格式及JSON格式的优缺点
   * HTML格式
     * 优点 - 简单
     * 缺点 - 解析复杂
   * XML格式
     * 优点 - 易于构建复杂数据
     * 缺点 - 构建、解析复杂
   * JSON格式
     * 优点 - 轻量级
     * 缺点 - 可能转换失败
回顾内容
   -DOM：独立于任何开发语言的
      -DOM的分类
         -DOM CORE
         -DOM HTML
         -DOM XML
         -DOM CSS
      -DOM API
         -获取元素
         -创建元素
         -替换元素
         -删除元素
         -插入元素
