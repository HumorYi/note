
1、HTML: Hyper Text Markup Language 超文本标记语言，纯文本类型语言  HTML页面可以嵌套脚本语言，如VBScript
2、HTTP: Hyper Text Transfer Protocol 超文本传输协议，作用是规定了数据传输的格式和方式
3、Web的工作原理：web向服务器(server)发送请求，服务器(server)对web的请求进行响应，他们中间如何传输数据是由http规定的   Request:请求   Response:响应 
4、web是一个超文本文件的集合，超文本文件是web的基本组成单元，一般是以.html为后缀的文件
5、浏览器：能够解析HTML代码以及JS脚本语言的一个工具

一：HTML的语法规范:HTML的作用是创建web页面/文档
   1、HTML用于描述功能的符号称为"标记"，如<p>、<h1>
   2、标记在使用时必须用尖括号括起来
   3、标记有封闭类型的标记也有非封闭类型的标记（）
      封闭型：成对出现，有开头有结束，如：
            <a>:开始  <标签名字>
	    </a>:结束 </标签名字>
      双标签中，可以将一些文本写在标签内，这些文本受当前标签样式控制
      注意：封闭标签必须成对出现，如果忘了结束将会产生异响不到的结果
      非封闭型：只有开头没结束（单标签），如：
            <br>:即表示开始，又可以表示结束，也可以写成<br/>（版本要求引发不同写法）
   4、元素，即标记：元素可以包含文本内容和其他元素，也可以是空的
   5、嵌套：一个元素包含在另一个元素内
         注意：嵌套应注意嵌套标签的顺序（使用顺序和语法顺序），嵌套代码要以缩进来体现
   6、属性：用来修饰元素
      <标记名称 属性名="属性值"></标记名称>
      一个标签内属性可以有多个，排名不分先后，多个属性间通过空格来区分
      例如：<p align="center">这是一个p</p>:align功能:控制文本在标签内的水平对其方式(left center right)
      标准属性(公共属性，通用属性)：大部分标签所具有的属性
      标签属性的学习：（写标签的属性一定要严格要求，防止出现版本引起的不能识别问题）
         id:定义所在标签的唯一标识名称
         title:鼠标移入到当前标签所在区域时所显示的文字
         class:引用样式表中的指定类样式
         style:定义当前标签的行内样式
         <!---->:注释标签（在HTML中的注释）：一般用于写思路，写法：<!-- 注释内容-->
      "<!--"和"-->"之间的任何内容都不会显示在浏览器中，注释不可以嵌套在其他注释中，也不能嵌套在任何标签的<>中
      例如：<!--<!-- 123-->-->错误：注释嵌套  <a <!--3221-->>错误：写在标签声明中<a> <!----> </a> 正确

二、HTML文档的结构
   1、<!doctype html>:文档类型声明，说明文档的版本，位于文档第一行
   2、<html>：根标签--整个文档的包含元素，紧跟<!doctype html>后面
   3、<head></head>:定义网页的头部内容，紧跟<html>标签后面
      可能包含：title（定义表头）、meta（定义网页的基本信息，如：字符集）、script（js语法）、style（css语法）、link（引用外部样式文件）
      1、网页标题--标签是<title></title>,只能出现在head中，没有任何格式，出现在浏览器最上方，一个网页最多只有一个标题，也可以不写标题。
      2、网页的编码格式--默认的编码格式：ISO-8859-1(纯英文格式);通过<meta/>标签修改
         1、写法(了解就好，一般自动生成)：<meta http-equiv="content-type" content="text/html;charset=ut-8"/>
	 2、写法(记住)：<meta charset="utf-8"/>（中文格式）
      3、声明内部样式表:
      4、引入外部样式表:
      5、声明内部JS(javascript)脚本:
      6、引入外部JS:
      7、声明其他元素，如关键字、描述等
         meta:一般做声明信息说明，常用属性：
	    http-equiv(字符集)，content(关键字)，name(关键字)，charset(字符集)
	 1、添加关键字：<meta name="keywords" content="HTML,CSS,JS,WEB前端">
	    (<meta name="keywords" content="关键字">)，这是固定写法
	 2、添加描述；<meta name="description" content="描述内容">-惯用写法
   4、<body></body>:定义文档主题内容，可以包含除<html><head>外的所有元素

   1、特殊字符：通过转义字符来表示特殊符号，如：空格、<、>等
      转义字符：改变了单词的原有的意思，被解释成一种全新的含义，格式为"&..."  &:与号
      1、空格：&nbsp;--一个"&nbsp"代表一个空格，可以写多个（单个空格也可以用"空格键"表示，两个以上不行）
      2、小于号(less than):&lt;
      3、大于号(greater than):&gt;
      4、企业标识(company):&copy;
      5、钱币:&yen;
   2、文本样式标签：
      -<b>...</b>:加粗
      -<i>...</i>:斜体
      -<u>...</u>:下划线
      -<s>...</s>:删除线
      -<sup>...<sup>:上标
      -<sub>...</sub>:下标
   3、标题元素：<h1>-<h6>:表示一级标题至六级标题，一级标题最大，六级标题最小，多数情况下会用在网页中文章的标题
   4、段落元素：<p></p>，成对出现
      p标签的格式：与其他文本用换行区分，添加垂直空白距离，作为段落的间距
      p标签属性：align--文本在p标签内的水平对其方式
   5、换行标记：<br/> 单标签 在任何地方创建手工换行
   6、分区元素：多用于布局
      块分区元素：该元素自动占一行，如：<div>
      行内分区：众多的行内元素不会换行，简单点说就是可以在一行显示的元素，如：<span>
   7、块级元素与行内元素：
      块级元素：独占一行，作用：多数用在于布局上  如：div,p,hn系列
      行内元素：一行内共存好多个，作用：包围文本，方便为文本添加效果   如：span,b,i,u,sub,sup,
      布局：网页上元素所摆放的位置
   8、分割线：单标签：<hr/>-->horizontal水平 作用：在网页上构建水平线
      常用属性：
      size(尺寸)：水平线的粗细程度
      width(宽度)：水平线的长度，可以给具体值或者百分比，可随浏览器大小而调整
      align：水平对其方式
      color：颜色，单一颜色
   9、预格式化标签：<pre></pre>  保留原来的换行和空格

三、链接和图像
   1、URL(Uniform Resource Locator):统一资源定位器，用于标识网络中资源的地址
      即路径：指当前位置到目标位置所经过的路线
      -绝对路径：指文件从最高级目录下开始的完整路径--特点：无论当前资源路径是什么，绝对路径总能找到需要的资源
      完整的URL组成：
      例如：http://www.baidu.com/img/logo.gif
            协议:http：//、 主机名（域名）：www.baidu.com、目标路径：img、资源名称：logo.gif
      -相对路径：指文件的位置相对于目标位置或指向一个可以从当前目录出发找到目标文件的路径
            平级用名字、子级进目录、父级向上返
      -根相对路径：相对于当前网站根目录到目标文件的路径
      例如：/images/user.jpg  根目录下的images文件夹中的user.jpg
      注意：所有的路径都用"/"表示，格式严格要求
   2、图像元素：<img/>单标签--作用是：将图像添加到页面上
      必须的属性：src--只要是指向要显示的图像的URL(路径)
      常用的属性：width(宽)、height(高)、title(标题)、alt(鼠标移入时显示，或者图片未被加载出来时显示)
   3、超链接元素：<a><a/>--作用是创建一个超级链接
      href属性：必须有的属性，指向链接目标的URL(路径)
      tarfet属性：目标打开的位置，取值：_blank(在新页面打开)、_seft(在本页面内打开)等
      name属性：定义锚点名称，用于元素定位
      链接的各种表现形式：
      -下载资源：<a href="abc.rar"></a>--下载abc.rar资源（资源一般是压缩文件较多）
      -页面跳转：<a href="abc.html"></a>--跳到abc.html网页
      -电子邮件链接：<a href="mailto:zhaoxu@tarena.com.cn">联系我们</a>--固定格式mailto：后加邮箱地址
      -返回页面的空连接：<a href="#">返回当前页面</a>
      -连接到JavaScript：
      -通过a定义描点：html的锚点位置相当于是HTML文档中某个位置的记号
         1、定义锚点：<a name="锚点的名称">(这里写不写东西无所谓)</a>--这就是锚点的设定格式
	 2、跳转到锚点处：
	    本页面的跳转：<a href="#锚点的名称">return</a>
	    跳到其他页面的锚点处：<a href="页面URL#锚点名称">return</a>

四、表格：作用-
   注意：所有放在table里的内容必须放在td里，tr表示行，里面只能有td，td表示列，可以承接任何内容
   1、标签：<table></table> 表格  <tr></tr>(table row) 表格的行 <td></td>(table date) 创建表格的单元格
   <!-- table默认情况下会根据输入内容自动调整大小，没有边框-->
      属性：
      border--边框大小（宽度）
      bordercolor--边框颜色
      width、height--宽高
      align--水平对齐方式（left、right、center）
      bordercolor--边框颜色（可以为任何的合法颜色值）
      bgcolor--背景颜色
      background--背景
      cellspacing--单元格之间的间离
      cellpadding--单元格内容和边框之间的间距（内边距）
      注意：sellspacing和cellpadding默认值不为0
      tr td 属性：valign 垂直对齐方式-top、middle、bottom
   2、合并单元格：
      -rowspan 合并行，指定一个数值，将向右合并病指定的列数（包含自己）
      -cowspan 合并列，指定一个数值，从当前单元格开始向下合并指定的单元格（包含自己）
   3、标题：<caption></caption>-定义表格的标题
	<th></th>:列标题，与td是平级的
   4、行分组：对表格进行分组
      表头行分组：thead
      表主题行分组：tbody
      表尾行分组：tfoot
      注意：行分组后会影响高度（头和脚高度会发生变化），同时跨行不能跨过组

五、结构标记（语义化）：用于标识常见结构，使文档结构清晰明了（看明知意）--全是封闭标签
   1、<header></header>-定义文档的页头：在页面中可以有多个header，可以做任何部分的header
   2、<nav></nav>-用于定义页面的主导航部分
   3、<section></section>-定义文档的主体（节），也可用section定义任何部分的主体
   4、<article></article>-用于定义独立于其他部分的内容，指引用的一段文字，一般用于定义帖子、文章等信息
   5、<aside></aside>-常用于定义主体内容之外的内容，如边栏，侧导航
   6、<footer></footer>-一般用于定义某区域的脚本信息

六、列表：主要是显示多条相关信息的组件（导航栏中应用最多现在）
   1、有序列表：列表内容前面有自动标号的（编号）
      用<ol></ol>标签--ol标签只能嵌套li标签，li标签可以嵌套任何标签
      常用属性：
      -start：排序的开始位置
      -type：有序列表的排序，值有：A，a，1（阿拉伯数字，默认值），I（大写罗马数字），i（小写罗马字母）
   2、无序列表：列表内容前面没有自动编号
      用<ul></ul>标签--ul标签只能嵌套li标签，li标签可以嵌套任何标签
      属性：
      -type：格式的形状，取值：disk 实心圆(默认值)、circle 空心圆圈、square 方块
   注意：1、<li></li>标签是ol、ul标签下的内容，所有内容都只能填写在li标签里面
         2、ul、li、ol都是有自带样式的，ol、ul有margin和padding样式，li有list-style-type:样式（list-style-type:none--是去掉样式的方法）
   3、定义列表：一般用于定义事物的解析，
      标签:<dl></dl>--定义一个第一列表
           <dt></dt>--在定义列表中定义的一个术语，列表标题
	   <dd></dd>--为已定义的术语提供定义，列表内容
      注意：多数出现在图文混排的样式效果，dt用于插入图片，dd用于做图文说明

七、表单：用于显示、收集信息，并提交信息到服务器，表单包括数据交互的界面元素和提交后的表单处理
   1、表单标签：<form></form>--定义表单，成对出现
      作用：用于定义表单中的基本信息，如提交地址，提交方式等
      注意：如果表单元素没有出现在<form>表单中，那么久不能被提交到服务器
      属性：
         1、action：动作--服务器处理数据的程序地址，一般由服务器开发人员提供（简单点就是找地址），默认是提交到本页（我们做的是html，它是没有任何动作的，所以没用）
	 2、method；提交方式--表单将以什么样的方式将数据提交给服务器（明文还是密文的），默认值是get(明文)
	    常用值：post--密文方式发送数据到服务器，不限制数据长度（大文件传输）
	            get--明文方式发送数据到服务器，传递数据的长度限制2kb（不同服务器限制不同）
	 3、name：专门用于定义表单的名称，可以方便用户通过JS(JavaScript)来获取表单
	 4、enctype：表单数据的编码方式，不同的数据将使用不同的数据，主要体现在普通文本的传输和文件传输上
	    1、普通文本的编码方式：application/x-www-form-urlencoded（默认值）
	    2、上传文件时的编码值：multipart/form-data
	    3、文本编码方式（不推荐使用）：text/plain

   <!--在input标签中，给定两个值：id和name，保证id是唯一的，同时强烈建议id和name值一样，原因是id一般用于js或css中使用，二nam是用于http协议中传值，传递的是键值对-->


   2、表单元素（控件）：作用是用于接受用户的数据，name 空间名称，不定义不提交
      1、input：类型
         1、<input type="text"/>：文本框，接受用户输入的普通数据--input元素的默认值
	 2、<input type="password"/>：密码框，以密文的方式显示数据，密码的录入使用该控件
	 3、disabled：禁止控件--只要该属性出现在表单元素中，那么该元素就不能用
      2、文本框与密码框：
         属性：
	    maxlength：最大长度
	    readonly：只读
      3、单选按钮、复选框
         1、<input type="radio"/>：单选按钮
	 属性--name：如果一组单选框按钮只有一个能被选上，那么他们的name属性值必须一样 checked设定默认值
	 2、<input type="checkbox"/>：复选框-作为一组复选框，他们的name属性值必须相同 checked设定默认值
	 注意：name属性保持一致，方便数据传输到后台
	 --reset submit这两属性本身不具有提交功能，只有和form标签才进行提交功能
      4、按钮：
         1、提交按钮：作用是将表单数据提交给服务器-<input type="submit"/>
	 2、重置按钮：作用是将所有的表单元素恢复到默认值-<input type="reset"/>
	 3、普通按钮：不带有任何功能的按钮，主要用于执行自定义的脚本内容-<input type="button"/>
      &&5、隐藏域和文件框：
         1、隐藏域：作用是在页面看不见的地方保存一段信息-<input type="hadden"/>
	    一般情况下，会将安全系数较高的并且不想让用户看到的数据保存在隐藏域中
	 2、文件框：作用是能够实现文件选择的功能，多数情况是在上传文件的场合使用<input type="file"/>
	    注意：使用这个文件框是必须将form的method必须为post，enctype属性改为multipart/form-data
   3、textarea：多行文本域
      语法：<textarea>文本内容</textarea>
      属性：name、id
      -cols：指定文本区域的列数（定义文本的宽度）
      -rows：指定文本区域的行数（定义文本的高度）
      使用场合:1、注册信息时的详细条款（只读）
		2、接受用户输入的多行数据
   4、select和option：作用是允许用户从下拉选项框中选择内容（而不是输入）
      分类：下拉列表、滚动列表
      语法：
         1、<select></select>表示下拉（滚动）列表
	 属性：
	    name：定义一个名字
	    size：显示备选信息的数量
	    multiple：是否允许多选
	 2、<option></option>表示下拉列表中的选项
	 属性：
	    value：选项的值
	    selected：预选中（默认选中第一值），用于更改默认选中项
   5、其他元素
      1、label元素：作用是与表单元素相关联，点击该label就如同点击那个表单元素
         语法：<label>显示内容</label>
	 属性：for-用于关联表单元素的id
      2、为控件分组：
         <fieldset></fieldset>；为控件分组
	 <legend></legend>：分组的标题

八、其他常用标记：
   1、浮动框架：可以在一个html页面中显示多个html文档内容，也就是将其他的页面嵌入到当前页面中
      语法：<iframe></iframe>--双标签出现
      属性：
      -src：浮动框架中的页面URL
      -height：高度（嵌入的网页的高度），一般用百分比
      -width：宽度（嵌入的网页的宽度），一般用百分比
   2、摘要与细节：作用是将网页的一部分信息通过雷士于下拉列表的方式进行显示和隐藏
      语法：
      -<details></details>：用于定义细节
      -<summary></summary>：显示当前details中的标题（details的子标签）
      注意：summary必须出现在details中的第一个子元素的位置
   3、度量元素(html5中的新元素)
      语法：<meter></meter>:多数用于表示进度的表示，也可以用作比例的显示
      属性：
      -min；范围的最小值，默认为0
      -max；范围的最小值，默认为1
      -value；度量值，默认为0
   &&4、时间元素：用于定义公历时间，是24小时间制或日期
      语法：<time>显示内容</time>-主要是给脚本语言使用
      属性：
      -datetime：规定日期/时间，日期与时间之间，通过T来表示分割
   5、高亮显示文本元素：作用是用于突出显示文本
      语法：<mark>显示文本</mark>


CSS样式：层叠样式表（Cascading style sheet）
   语法：选择器{属性:值;属性:值;}
   注意：/**/-这是css的注释标签
         作用：实现了内容与表现的分离，提高了代码的课重用性和可维护性
   1、css样式表使用方式：
      1、内联方式：将css样式定义在HTML的标签中
         特点：不通用，只能定义某一标签的单独样式
      2、内部样式表：在一系列样式定义在HTML的<head>中
         特点：当前网页任何一个标签都可以使用，体现出可重用行
      3、外部样式表：将样式定义在外部的css文件中，可以由任何一个页面进行样式表的引用
         特点：真正意义的实现了样式表的可重用性
   2、使用：
      1、内联方式的css：定义在HTML标签中的style属性里--<h2 style="样式规则"></h2>
         css语法：
	 -样式规则：属性值:属性值-如：color:red（多个规则之间用";"区分）
      2、内部样式表的css：样式内容出现在<head>标签中
         css语法：
	 -样式规则：选择器和样式声明
	 选择器：决定哪些元素能使用定义好的规则 
	 样式声明：由一对大括号包围的所有的样式规则，规则之间用";"区分
	 写法：     选择器
		    {
		       /*样式规则*/
		       属性名称:属性值;
			属性名称:属性值;
		    }
      3、外部样式表的css：
         step1：创建一个文件以css作为后缀
	 step2；在文件写样式相关的代码（写法和内部样式表一样）
	 step3；在页面中对css文件进行引用
	        引用方法：
		<head>
		   <link rel="stylesheet" type="text/css" href="引用的样式表的地址"/>
		</head>
		<head>
		   <link @import"引用的样式表的地址"/>
		</head>
   3、样式优先级：样式定义冲突时，会根据样式规则的优先级进行应用样式
         优先级：最高的是内联样式，其次是内部样式表和外部样式表的就近原则（谁靠近标签引用谁的样式），最后是浏览器默认样式
         调整优先级：!inportant-添加了这个代码的后会优先
            语法：选择器{属性值 !important;}
      层叠性：可以为一个标签定义多个样式，不冲突时，多个样式可以同时生效
   4、选择器：规定了那些元素能够使用定义好的样式
      1、通用选择器（*的意义：乘号或者是所有）
         表示："*"--可以与任何一个元素匹配，多数用在设置网页整体的默认样式上
	 例如:
	    *
	    {
		font-size:12px;
		font-family:"Microsoft Yahei""宋体";
	    }
      2、元素选择器(又叫标签/标记选择器)：由html元素名称作为选择器
         作用：用于修改当前选择器所对应的元素的默认样式
	 表示：元素名称
	 例如：
	    p
	    {
	       fnot-size:12px;
	    }
      3、类选择器：通过标签的class属性进行引用
         语法:.className{}
         注意：类名不能以数字开始
	 使用：能够附带class属性的元素都能使用类选择器，将class属性设置为类名即可
	 注意：一个标签也可以同时引入多个类选择器
	 例如：<div class="c1 c2"></div>
      注意：类选择器和元素选择器结合使用能够实现某种元素中不同样式的细分控制-又称为分类选择器
            语法：元素选择器.类选择器{}---p.important{}
      4、id选择器：特点是作用于指定id属性值的元素上
         语法：#idName{}
	 例如：
	    #header{....}   
	    <div id="header"></div>
	 id属性的作用：标识元素的唯一的值，引用样式表中的id样式
      5、群组选择器：作用是定义通用的东西，多个选择器可以共用一个样式
         群组选择器的声明是以逗号","隔开的选择器列表
	 语法：选择器1,选择器2,...{}
      6、后代选择器：作用是根据元素的位置（层次），关系然后改掉样式
         <div>
	    <span>
		<span class="s1"></span>
	    </span>
	 </div>
	 语法：选择器1 选择器2{}
      7、子代选择器：通过元素的层次关系（只能到下一级）
         语法：选择器1>选择器2{}
         <fieldset>
	   <span class="s1"></span>
	   <div>
	      <span class="s2"></span>
	   </div>
	 </fieldset>
	 span.s1是fieldset的子代元素，span.s2是div的子代元素，span.s2是fieldset的后代元素
      8、伪类选择器：组要是为一些选择器添加特殊的效果，多数表示一个元素或选择器的不同状态
         语法：主要是通过":"作为结合符--选择器:伪类选择器 顺序是：lvha
	 伪类选择器的分类：顺序是：lvha（防止浏览器不能兼容）
	    链接伪类：
	       -:link 尚未被访问的链接的状态
	       -:visited 访问过的连接状态
	    动态伪类：
	       -:hover 鼠标悬停在元素上的状态
	       -:active 元素被激活时的状态
	       -:focus 元素获取焦点是的状态
	    目标伪类：
	    元素状态的伪类：
	    结构伪类：
	    否定伪类：
   5、选择器的优先级：内联>ID>类(伪类)-谁靠近标签谁优先>元素
      例如：
         <div id="d1" class="red"></div>
	 div{color:blue;}
	 #d1{color:green;}--优先
	 .red{color:yellow;}
   6、尺寸：
      -在HTML中适合使用尺寸属性元素
      1、所有的块级元素都适用
         div、p、hn系列、ul、ol、li
      2、大部分行内元素不适合使用尺寸属性
         span
      3、存在width与height属性的元素
         img、table
   7、溢出：overflow
      属性值：
      -visible: 超出范围可见
      -hidden: 超出范围隐藏
      -scroll: 超出范围滚动条方式显示
      -auto: 超出范围自动样式显示
      -overflow-x: x方向上的控制
      -overflow-y: y方向上的控制
   8、边框：border
      方向：left，right，top，bottom
      大小：width
      样式：style
      颜色：color
      语法：border:方向 样式,颜色;（固定样式，顺序不能调换）
      边框圆角：border-radius 可以自由组合调单角变圆角
   &&9、边框阴影：box-shadow-向方框添加阴影
      取值：
      box-shadow:h-shadow(必须用，水平阴影偏离)
      box-shadow:v-shadow(必须用，垂直阴影偏离)
      blur:可选用，模糊程度
      spread:可选用，阴影尺寸，值越大，阴影越大
      color：可选用，阴影颜色
      inset：可选用，将外部阴影改为内部阴影
      &&图片边框：由图像作为元素的边框显示效果
         语法：border-image:src(地址) width(图片大小) repeat repeat(平铺)/round(铺满)/stretch(拉伸);
	 border-image-source:url(图片路径);
	 border-image-width:图片边框宽度
	 border-image-repeat:边框平铺 值：repeat(平铺)/round(铺满)/stretch(拉伸)
   &&10、轮廓：（outline）是绘制于元素周边的一条线，在边框的外围
      语法：outline:color style width;
         outline-color:
	 outline-style:
	 outline-width:
   11、外边距-margin
      取值：-取值可以为负数
      -margin:10px;-->表示上下左右各10px
      -margin:5px 10px;-->表示上下5px，左右10px
      -margin:5px 10px 20px;-->表示上5px，左右10px，下20px
      -margin:5px 10px 15px 20px;-->表示上5px，右10px，下15px，左20px（上右下左）
      外边距合并：
      -上下外边距相遇，两个外边距形成一个外边距，称之为合并外边距。最终编剧距离以数值大的为准
      -左右外边距相遇，最终值为两外边距值相加的和
   12、内边距-padding：内容区域和边框之间的空间（注意：内边距会扩大元素边框所占的区域）
      取值：
      -语法-padding:value;--内边距属性值可以为象数、百分比，但是不能为负数
      -padding:v1(上下) v2(左右);
      -padding:v1(上) v2(左右) v3(下);
      -padding:v1(上) v2(右) v3(下) v4(左);
   13、css重写：目的是去除有些标签默认显示效果
      如：hn系列、p、ul、ol、di、dt、dd
      方式是：将margin、padding全部设置为0，将list-style-type:赋值为none。
   14、背景：(背景图会覆盖背景颜色)
      背景颜色：为元素设置背景色
      -属性：background-color--值可以为任意合法颜色值，也可以为transparent（透明色）。
      背景图片：为元素插入图片作为背景
      -属性：background-image:url("图片路径")
         1、背景重复：默认情况下，背景图像在水平和垂直方向上重复出现（平铺）
         -属性：background-repeat:
            可取值为:
	    -repeat:在水平和垂直方向上平铺（默认值）
	    -repeat-x:仅在水平方向平铺
	    -repeat-y:仅在垂直方向平铺
	    -no-repeat:仅显示一次
         2、背景图像的尺寸
	 -属性：background-size:
	    取值：
	    -v1 v2:宽度 高度
	    -v1% v2%:原始大小的百分比 宽 高
	    -cover:扩展背景图像，使背景图像完全覆盖背景区域，部分图像可能不能显示出来
	    -contain:将图像扩展至最大尺寸，让高度和宽度自动适应内容区域(按比例拉伸)
	 3、背景图片固定：
	    属性:background-attachment
	    取值：
	    -scroll-滚动，默认值
	    -fixed-背景图片固定（多用于水印）
	 4、背景定位
	    属性：background-position-多数用于取大图中的一部分作为背景
	    取值：
	    -left(在元素左边)  right(右边)  top(上边)  bottom(下边)  center(中间-水平、垂直同时居中)
	    -x% y%:第一个值表示偏移量，第二个值表示垂直偏移量
	    -x y:第一个值表示水平偏移量，第二个值表示垂直偏移量
	 5、背景绘制区域（主要是颜色）：
	    属性：background-clip:
	    取值：
	    -border-box:背景被裁剪到边框，包括边框，默认值
	    -padding-box:背景被裁剪到内边距框，包括内边距区域
	    -content-box:背景被裁剪到内边距框，不包括内边距区域
	 6、背景定位区域(图像)
	    属性：background-origin
	    取值：
	    -border-box:背景被裁剪到边框，包括边框，默认值
	    -padding-box:背景被裁剪到内边距框，包括内边距区域
	    -content-box:背景被裁剪到内边距框，不包括内边距区域
	 7、背景属性：相当于在一个属性中声明所有相关的背景属性
	    语法：background:color url() repeat attachment position;(顺序不能变)
	    例如：background:red url("user.jpg") no-repeat fixed -35px 25px; 
   15、渐变：是指两种或多种颜色平滑过渡
      渐变的分类：
         -线性渐变：从一个方向渐变到另一个方向
	    --linear-gradient(angle,color-pont1,color-pont2,...)
	       -angle:作为第一个参数，指定渐变的方向，可以是角度值也可以是关键词，如to top(对应0deg),to right(对应90deg)，to bottom(对应180deg)，to left(对应270deg)
	       -color-point:表示颜色的起始点、中间点或者结束点，取值为颜色和位置的组合，如red 0%、green 50%
	 -径向渐变：以中心点向外渐变
	    --radial-gradient([size at position],color-pont1,color-pont2,...)
	       -position:为第一个参数，指定渐变的圆心位置，默认为center，可以取值为数值（x y位置）、百分比或者关键字，此参数可以省略
	       color-point:表示颜色的起始点、中间点或者结束点，取值为颜色和位置的组合，如red 0%、green 50%
	 -重复渐变：重复式的渐变（可以在线性渐变基础上渐变，也可以在径向渐变基础上渐变)
	    --repeating-linear-gradient:重复线性渐变
	    --repeating-radial-gradient:重复径向渐变
	 -注意浏览器兼容性：--解决是增加浏览器前缀
	    -火狐：-woz-
	    -Chrome、Safari：-webkit-
	    -Opera：-o-

   16、文本格式化：
      1、控制字体：
         -指定字体：font-family:"value" "value" "value"...;
         -字体大小：font-size:value;
         -字体加粗：font-weight:bold(加粗=900，即为b标签)/normal(正常体=400，默认值)/value(数值)
         -字体样式（斜体）：font-style:normal(正常体)/italic(斜体，相当于i标签)
         -大型小写字母：font-variant:normal(正常)/small-caps(小型大写字母)
         -字体属性：font:值列表:font-style font-variant font-weight font-size font-family;
         例如：font:normal normal normal 12px Times,宋体；
      2、控制文本格式：
         1、文本颜色：color
         2、文本水平对齐方式：text-align:left/right/center
         3、文字线条修饰：text-decoration:none(无下划线)/underline(下划线)/overline(上划线)/line-through(删除线)
         4、行高：注意-如果行高的高度高于文本自身的高度的话，那么文本将在这段区域垂直居中
            属性：line-height(文本垂直居中方式)
   	 取值：常用值 与所在容器设置相同高度
         5、首行文本缩进：text-indent:取值-缩进的距离，比如20px
         6、文本阴影：text-shadow:h-shadow(水平) v-shadow(垂直) blur(模糊程度) color(颜色);
         7、文本溢出：
            -处理空白：white-space:normal(正常，默认值)/nowrap(不换行)
      	    -文本溢出处理：text-overflow:clip(不显示，默认值)/ellipsis(文本超出部分用"..."表示)
      	    注意：text-overflow属性必须配合overflow:hidden联用，否则text-overflow无效果
         8、文本换行（只对英文有效，对中文无效）
            -长单词换行：word-wrap:normal(正常，默认)/break-word(破坏单词，拆分单词显示使内容不超出范围)
   	    -文本换行：word-break:
	    取值：
	       -normal：正常换行方式换行
	       -break-all：换行，不考虑单词显示完整问题
	       -keep-all：当单词达到边界后根据半角空格" "和连字符"-"换行
   17、表格属性：
      1、文本的垂直居中：vertical-align:top/middle/bottom
      2、表格特有属性
      -边框合并：border-collapse:separate(默认值，全显示)/collapse(边框合并)
      -边框边距：border-spacing-相当于table的cellspacing属性(内边距是padding)
         注意：必须是border-collapse为separate的时候才有效
	 取值：
	 -v1：表示水平和垂直方向的距离都是v1
	 -v1 v2：v1表示水平间距，v2表示垂直间距
      -标题位置：caption-side:top(默认，靠上)/bottom(靠下)
      -显示规则（固定布局）：table-layout:
         取值：
	 -auto：列的宽度有单元格内容来决定
	 -fixed：列宽度由表格宽度和列宽度决定，不受内容所影响
   18、定位：-行级元素也可以浮动，浮动起来后就相当于块级元素可以定义高宽
      1、浮动定位：浮动指脱离普通流定位，不占页面位置，停靠在包含框内的左边或者右边(还在包含框内)
         -属性：float
	 -clear属性：定义了元素的边上不允许出现浮动元素-取值：left/right/both
   19、显示：
      -display属性：显示
         -none：隐藏（不占空间的隐藏）
	 -block：行内元素按块级元素显示
	 -inline：块级元素按行内元素显示
	 -inline-block：行内块级元素，可改变宽和高
	 -table：
      -visibility：规定元素是否可见
         -visible：默认值，元素可见
	 -hidden：元素不可见，但是依然占据空间
	 -collapse：用在表格元素是，可删除一行或一列，且不影响表格布局
      -opacity：设置元素的不透明
         取值：value-规定不透明度，值越大，越不透明（0.0完全透明--1.0不透明）
      -vertical-align：设置单元框中的单元格内容的垂直对齐方式
         1、td中修改文本的垂直对齐方式-其他元素推荐使用line-height属性
	 2、
	 取值：
	 -baseline：默认值，元素放置在父级元素的基线上
	 -top：把元素的顶端与行中最高级元素的顶端对齐
	 -bottom：把元素的顶端与行中最低元素的顶端对齐
	 —middle：把元素放置在父级元素的中部
	 -baseline：
      -cursor属性：定义鼠标光标的形状
         取值：default(箭头)/pointer(小手)/crosshair(十字)/text(I型)/wait(刷新等待光圈)/help(箭头加问号)
   20、列表：使用最多的场景是用于做导航（通过浮动方式）
      -列表样式：
         -列表项标识：list-style-type--用于控制列表中列表项的标识样式(文本标识不属于文本，在文本之外)
	 -列表项图片：list-style-image--使用图片来替换列表项的标识
	 -列表项位置：list-style-position--改变文本项显示位置位置（写在li标签里面）
	    取值：outside(标记在文本之外)/inside(标记在文本之内)
	 list-style:是控制列表项样式属性的缩写
	 --写法：list-style:type rul(图像位置) position;一般直接写list-style;none;就好了
   21、定位：相对定位、绝对定位、固定定位
      -堆叠顺序：z-index:value(这是一个数值，越大堆叠顺序越高，也就是越在上面，可以为负值，堆叠顺序越低)