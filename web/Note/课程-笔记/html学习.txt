介绍：
HTML标记语法
1、用于描述功能的符号成为“标记”；
2、使用标记是必须使用尖括号括起来；
3、标记有封闭类型的标记（有开头有结尾），也有非封闭类型的标记（有开头没结尾）

标签就是元素

非封闭标签：有开始没有显示结束
<hr>：一条水平线  也可以写成<hr />
<br>：换行符  也可以写成<br />
<img>：图像 也可以写成<img />

第二天：
HTML文档结构：区分html版本(html中标签不用区分大小写)
1、文档类型声明： <!doctype html>--声明这个html是什么版本的
2、每个html中只有一对根标签(所有的内容都应该在根标签里面)：<html></html>
3、在根标签的内部有两对结构标签(两标签是平级的)：
   <head></head>：页面的头部，用于定义全局信息：页面标题、样式（css）、js、文档的编码格式
   <body></body>：页面主体，主要定义页面的显示内容

标签的属性(标签不区分大小写)：每个标签都可以有属性，每个属性都可以定义标签不同的功能
	语法：<标签 属性名="属性值" 属性名="属性值"></标签>（标签可以有多个属性，属性排列不分先后）
	如：<h1 align="left">左对齐</h1>;<h1 align="center">中对齐</h1>;<h1 align="right">右对齐</h1>
	id:定义标签的唯一标识
	class：定义标签的类样式(css)
	style：定义标签的行内样式(css)

文本标记：
1、特殊字符：
   a、空格折叠：&nbsp;<!--一个&nbsp;代表一个空格-->
   b、通过字符实体来表示特殊字符：
      &lt;表示less than（小于号）
      &gt;表示greater than（大于号）
      &copy;企业标识
      &yen;人民币标识
2、普通文本：可以直接写，考虑到后期样式的更改，建议使用标识进行包围
3、标题文本：h1-h6 一共六个
4、段落文本：<p></p>
5、<b></b>:(bold)以粗体的方式像是文字
   <u><u/>:(underline)下划线
   <i></i>:(italic)倾斜
6、仅仅包含其他文本或行内元素的标签，没有额外的样式:<span></span>
   颜色：#000000-#FFFFFF（十六进制，大小写不用区分）每一位数字可以为：0-9 A-F
   定义颜色可以直接用颜色的英文名，也可以用16进制代码定义
7、用于包含块级元素的标签，不带额外的样式：<div></div>
8、块级：独自占一行的元素：div，p，hn，hr，li，ul，ol;主要用于布局
9、行内（行级）元素：与其他的行内元素可以在位于同一行去显示的：span，b，u，i
10、div和span的区分：
    如果只用于显示内容的话，推荐使用span，div都可以
    如果用于网页布局的话，强烈推荐使用div

图像和连接
  1、URL（Uniform Resource Locator）：（统一资源定位符）要寻找的资源的地址，只要用到外部资源都会用到它
     相对路径：相对于当前页面而言：img/kaola.jpg
     绝对路径：全路径，就是资源文件在计算机中的位置：
     E:/zhangxingming/day02/img/Koala.jpg 引用电脑中的资源  http://www.xxx.com/img/logo.png 引用互联网上的资源
  2、<img />单标签 
     src属性：指定显示的图像的路径（大小写一定要区分）
     width属性：指定图像的宽度
     height属性：指定图像的高度
     title属性：鼠标移动上来所显示的文字
  3、链接(又叫超链接）：标签是<a></a>
     <a href="跳转的地址" target="_xxx">显示的文本</a>
     target:打开链接的方式  _self:在自身的页面中打开链接  _blank:在新的页面中打开链接
     <a href="练习.html">点击文本</a>;
     <a href="C:\Users\Administrator\Desktop\html学习.txt"></a>;
     <a href="http://www.baidu.com">百度</a>

（html5这两年才兴起，各浏览器的兼容性不一样，学习后要自己解决兼容性问题，可能要用其他版本的html）
结构标记
  1、作用：让代码更加清晰，内容更容易维护
  2、结构标记：（只能用于html5，其他版本不能应用）
     <header></header>定义页面头部内容
     <nav></nav>定义导航栏
     <section></section>定义页面主体内容
	<section></section>中的<aside></aside>用于定义主体内容中特殊部分的内容(主题内容外的内容)
     <footer></footer>定义网页底部信息
     以前的写法是(html5之前)：
     <div id="header"></div>
     <div id="nav"></div>
     <div id="section"></div>
     <div id="footer"></div>

列表：主要是显示多条相关信息的组件（导航栏中应用最多现在）
  1、有序列表：列表内容前面有数字的（编号）
     用<ol></ol>表示（order list），写法如下：
     <ol>
	<li></li>：列表项（list item）：出现在ol（ul）中用于显示列表内的内容
     </ol>
  2、无序列表：列表内容前面没有自动编号
     <ul>(unorder list)
	<li></li>
     </ul>
  3、注意：ol或ul中只能嵌套li  li中可以嵌套任意的html标签
  ul、li、ol都是有自带样式的，ol、ul有margin和padding样式，li有list-style-type:样式（list-style-type:none--是去掉样式的方法）

CSS：Cascading Style Sheet 层叠样式表：独立的样式系统，定义好的样式所有标签都可以使用
  1、作用：以统一的方式为页面定义外观
  2、样式表的分类（按使用方式分）：
     1、内链样式表：将css代码写在标签的style属性中--只针对这一个标签起作用
        如：<p style="color:red;">No1</p> <p>No2</p>：只对前面的<p>标签起作用
     2、内部样式表：将css代码写在head标签里面的style标签中--提高了代码的重用性（仅限当前页面使用）
     3、外部样式表：将css代码写在单独的以.css为后缀的文件中，独立于任何一个页面
        --真正意义上的重用，将页面内容与表现样式完全分离（任何网页都可以使用）
  3、css语法：严格区分大小写
     选择器：由{}表示范围
     {
	样式名称:值;例如：color:red;（;表示当前样式的结束）  text-align:center; == align="center";
     }
  4、选择器：规定了哪些元素使用当前的样式-相当于给当前样式取了一个名字
  <!-- 选择器样式重复，定义没冲突则两样式叠加，定义有冲突的话则优先选择后面的定义，但是id定义优先级最高-->
     1、元素选择器：其作用是改变某一标签的默认显示样式
        又称为标签选择器和标记选择器，使用html的标签名称作为选择器的名称，主要用于设定某一标签的显示样式
        如：h1{}-->设定h1标签的显示样式
	    div{}-->设定div标签的显示样式
	    h1
	    {
		font-size:12px;
		color:red;
		text-align:center;
	    }h1
	    标签的样式是：字体大小为12px，颜色为红色，居中
     2、ID选择器：使用html元素的id属性值作为css选择器名称，前面要以"#id名"为样式为某个元素定义他所持有的样式
        <div id="d1"></div>   id的作用是：这个元素在这个网页上的唯一定义值
	#d1-->id为d1的元素
	{
	  color:red;
	  text-align:center;
	}
     3、类选择器（又称为类样式）：使用html标签的class属性值作为选择器的名称，用".class属性值"的样式定义，class可以在多个标签中相同，目的是通过类选择器来定义标签的公共属性
        例如：<标签名 class="name" />
	      <div class="redBack"></div>
	      <span class="redBack"></span>
	      
	      .redBack
	      {
		color:red;
	      }
     4、后代选择器（用空格区分）：以元素（标签）的层次关系作为选择器的名称（以空格为重点，一定要有空格）
        例如：<div>
	         <a></a>
	      </div>
	      这样我们可以说标签<a>是标签<div>的后代
	#div .name{}    //含义是：修改id为div元素（标签）中的class为name的元素（标签）的样式
     5、群组选择器（选择器分组）：定义共同部分的样式（用逗号区分）
        span,div,.cName,#idValue{}  
	//含义：页面上的span元素（标签），div元素（标签），class的值为cName的元素，id为idValue的元素
	//行级元素宽度和高度由内容来决定的，不受width，height影响
     6、伪类选择器：定义元素不同状态时的样式
        a元素的状态：未访问过的状态、鼠标悬停、激活时的状态、访问过的状态
	常用伪类选择器：
	:link{}------ 未访问过的元素定义
	:hower{}----- 鼠标悬停的状态
	:active{}---- 激活时状态
	:visited{}--- 访问过的状态
	例如：修改id为div1的四个伪类状态
	      #div1:link{}
	书写顺序：lvha（防止浏览器不能识别伪类的状态）
	a:link
	a:visited
	a:hover
	a:active
  5、文本属性：
     1、color---文本的颜色：
        值可以是颜色英文名;也可以是#6位十六进制（#012345）和#3位十六进制：#abc-->#aabbcc
     2、text-align---文本的对齐方式（水平）：值：left、center、right
     3、text-decoration---文本的线条样式：值：none、underline、overline
     4、font-size---文字大小：单位是px(像素)用得多 如：font-size:14px
     5、font-family---字体
        font-family:"Microsoft Yahei（微软雅黑）","宋体","华文彩云"  字体可以是多个，以第一个匹配到为主
     6、font-weight---文本加粗（默认值是normal）  值：normal、bold
     7、font-style---文本斜体显示  值：normal、italic
     8、line-height---行高  一般用于解决文本在一个元素内的垂直居中问题
        解决方案：将line-height设置为元素的height保持一致，仅仅针对单行数据
  6、尺寸与边框
     1、width 宽度
        height 高度
	注意：这两个属性只对块级元素有效，行内元素无效
     2、border 边框：设置上下左右四个边框的大小、样式、颜色
        border:1px solid red;  设置整个边框大小颜色
	border-top/bottom/left/right 边框上下左右
	例如:border-top-style: 上边框样式
	     border-right-width: 右边框大小
	     border-bottom-color: 下边框颜色
     3、border-radius:把边框的方角变为圆角，给定一个值，标识变为圆角矩形
  7、框模型（box modal），又叫盒子模型、方框模型
     -----主要是解决元素的内外边距问题，一般用于块级元素
     1、margin:外边距  
        margin:10px; 四个方向的外边距都是10px（以左上优先）
	margin-top: 上外边距
	margin-bottom: 下外边距
	margin-left: 左外边距
	margin-right: 有外边距
	样式：margin:2px 10px; 表示上下2px，左右10px;
	      margin:1px 2px 3px 4px; 表示上1px，右2px，下3px，左4px（上右下左-顺时针方向）
	      margin:5px auto; 表示设置元素在当前范围内水平居中显示
     2、padding:内边距
        padding:10px; 四个方向内边距为10px
	padding-top:
	padding-bottom:
	padding-left:
	padding-right:
     3、margin、padding、border元素大小？
        元素的总尺寸：
	宽度=外边距+边框+内边距+元素width;==宽度=左外边+右外边+左内边+右内边+左边框+右边框+元素width;
	高度=外边距+边框+内边距+元素height;==高度=左外边+右外边+左内边+右内边+左边框+右边框+元素height;
  8、浮动：与块级元素定位相关
     1、网页默认情况下，采用的是流式布局（从上到下（块级元素），从左到右（行内））
     2、可以通过一些方式修改默认的布局方式
     3、浮动定位：元素脱离原有的层，停靠在左侧或右侧，适用于多个块级元素在同一行内显示
        浮动元素是会影响后续元素的定位
     4、浮动的属性：float  float的值只有：left和right
     5、clear:left/right/both  清除影响
  9、背景：
     背景颜色  background-color:
     背景图像  background-image:url("路径")----默认是有重复的
     背景平铺  background-repeat:
                          repeat:  完全平铺（即横又纵）
			  no-repeat:  不平铺
			  repeat-x: 横向平铺
			  repeat-y: 纵向平铺
  10、样式表的使用
     1、行内样式：只对行内有效
        <div style="font-size:12px;"></div>---在style中只能写样式代码
     2、内部样式：只对元素内的字符起作用  <style></style>
     3、外部样式表：
        1、创建一个.css作为后缀名的文件  //文件名尽可能不要使用中文字符
        2、在css文件编写选择器以及样式
        3、在页面中引入当前的css文件
           引入的位置是在<head></head>里面，例如：
	   <head>
	      <link href="css文件路径" type="text/css" rel="stylesheet"/>
	   </head>
  11、css重写（重置）：把所有标签自带格式重置
     *  //*一般作为相乘使用，但是这里是“所有”之意
     {
	margin:0px;
	padding:0px;
	list-style-type:none;
     }
  12、定位属性：
      定位：在html元素在网页上的位置摆放
      1、默认情况--流式布局：特点是从上到下，从左到右
      2、边距定位（margin）：定位时不建议使用，原因是可能会影响布局
      3、浮动：不适合用于精确定位
      4、css定位方式：
         1、static（默认）：又称为静态定位，采用流式布局定位
	 2、相对定位：相对本身的原有的位置进行新的定位---用position:relative;标签实现
	    偏移属性：top、bottom、left、right的值
	 3、绝对定位：
	    position:absolute
	 4、固定定位：position:fixed;
	    根据top、bottom、left、right进行定位
	 注意：层的重复问题？
	       叠放顺序:层的显示顺序
	       属性：z-index:  属性值大的在上面
	       例如：a:z-index:0; b:z-index:5; c:z-index:10;    c在最上面