JQUERY--讲师：
姓名：金云龙
博客：www.longestoty.com
第三阶段课程：Jquery、HTML5进阶、SERVER、AJAX(异步交互)
jQuery是目前全球使用率最高的
jQuery支持链式操作

第一天：

一：JAVASCRIPT类库：简称为JS库
   -作用 - 为了简化javascript的开发
   -目的 - 预定义了很多对象(属性和方法)和函数
   -特点 - 兼容各大浏览器
   -扩展内容
      1、方法与函数的区别
         -方法 - 定义对象时,对象的方法(出现在对象中)
         -函数 - 函数其实也是方法
      2、Web2.0
         -Web1.0 - 以内容为主的网站(门户网站)
         -Web2.0 - 以人的关系为主的网站(社交网站)
         -Web3.0 - 基于移动互联网的社交网站(微信)
      3、Web前端 - 全端开发(javascript)
         -客户端 - PC端和移动端
         -服务器端 - NodeJS
         -数据库端 - MySQL
      4、浏览器(内核 - javascript引擎)
         -IE - IE6/7/IE8  IE9/10/11
         -其他浏览器(WebKit-Apple)
            -Safari浏览器
            -Chrome浏览器
            -Firefox浏览器
            -众多国内浏览器（不建议使用，内核不清晰，可能会出现不能遇见的效果）
               QQ浏览器 - 号称自主内核X5|V5
               百度浏览器 - 号称自主内核X5
               遨游浏览器 - 号称自主内核
      5、配置EditPlus快速浏览
         1、打开工具栏Tools->Preferernces选项/打开EditPlus的配置窗口,选择Tools选项
         2、选择Browers选项,选项Other...选项
         3、在桌面找到Chrome浏览器的快捷方式,鼠标右键,选择"属性".
         4、将属性窗口中的"目标"对应的路径内容复制
         5、将复制的路径,粘贴到EditPlus的配置选项中
         6、快速打开浏览器的快捷键"Ctrl+B"
      6、测试javascript代码时
         1、使用console.log()进行打印
            -.error() - 输出错误
            -.warn() - 输出警告
            -.info() - 输出信息
            -.log() - 输出日志
         2、使用alert()打印输出
      7、断点调试
         -打断点 - 在对应代码前的行标处,鼠标点击即可
         -断点调试 - 重新加载页面,自动停止在对应的代码中
         -功能 - 从左到右：暂停/运行功能，单步跳过，单步跳入，单步跳出
二、JQUERY：实现HTML页面的内容与结构的分离,jQuery其实就是一个JS文件
   -分类
      1、jQuery - Web版本(最主要)
      2、jQuery UI(User Interface) - 集成UI内容
      3、jQuery Mobile - 移动版本(WebApp)
      4、QUnit - 用于测试
   -版本
      -1.4.2版本 - 企业开发使用
      -1.8.3版本 - 企业使用最新
      -1.11.3版本 - 目前jQuery最新
      -2.x.x版本 - 不再支持IE浏览器(8以前)
   -特点
       * HTML代码(结构) - 标签
       * HTML内容 - 浏览器运行页面后显示的
   -如何使用jQuery
      1、在HTML页面中引入jQuery文件
      2、使用jQuery的选择器定位(获取)页面元素
      3、利用jQuery的API方法完成需求
   -基本内容
      1、$(selector)：jQuery的工厂函数--该函数返回jQuery对象
      2、jQuery的约定：jQuery对象前增加"$"符号
   -DOM对象与jQuery对象
      -DOM对象：通过DOM获取的元素,称之为DOM对象
      -jQuery对象：通过jQuery包装DOM后产生的对象-jQuery对象的底层还是DOM对象
      -DOM对象与jQuery对象的转换
         1、DOM对象转换为jQuery对象：$(DOM对象)
         2、jQuery对象转换为DOM对象
            -jQuery对象是数组对象 - 角标：$(selector)[0](这种方法少用，因为有歧义，类似遍历中数组的写法)
	    -jQuery对象提供get(index)方法：$(selector).get(0)
         -注意 - DOM对象与jQuery对象之间不能相互调用
   -jQuery事件：jQuery将DOM的事件封装成对应的方法
      1、jQuery操作CSS：$(selector).css(name,value)方法--其中name是CSS的属性名称，value是CSS的属性值
   -***选择器***-是jQuery的根基
      1、基本选择器：多个选择器并列使用,中间使用","分隔
      2、层级选择器
      3、过滤选择器--在选择器前有一个冒号":"
         -基本过滤选择器
         -子元素过滤选择器:nth-child选择器，开始值从1开始，只有这个特殊
	    子元素过滤选择器在简单结构中可用层级选择器+基本过滤选择器代替，但是要确定效果一样
         -内容过滤选择器
         -可见性过滤选择器
         -属性过滤选择器
         -表单对象属性过滤选择器
      4、表单选择器
   -选择器的特点
      -数量多 - 记不住,单一使用简单 - 混合使用难度大,正确使用的方式不唯一
      -选择器的建议:不用记 - 会查jQuery的帮助文档即可,多练 - 9个页面

第二天：

一、DOM操作
   -回顾原生DOM操作
      获取节点
      创建节点
      遍历节点
      替换节点
      删除节点
      插入节点
      复制节点
   -jQuery中的DOM操作
      1、基本操作
         -html()：获取或设置指定元素的HTML代码，类似于原生DOM的innerHTML属性
            -获取 - html()
            -设置 - html(html代码)
         -val()：获取或设置指定元素的文本内容，类似于原生DOM的value属性
            -获取 - val()
            -设置 - val(value)
         -text()：获取或设置指定元素的value属性值，类似于原生DOM的textContent属性
            -获取 - text()
            -设置 - text(文本内容)
         -attr()：获取或设置指定元素的属性
            -获取 - attr(attrName) - 类似于getAttribute()
            -设置 - attr(attrName,attrValue) - 类似于setAttribute()
            -removeAttr(attrName)：删除指定元素的属性，类似于removeAttribute()
      2、样式操作 - css
         -attr("class",classValue)：设置-无论之前是否具有该样式，重新设置
         -addClass() - 追加样式
         -removeClass() - 删除样式
            -不传参 - 删除所有样式
            -传参 - 删除指定样式
         -toggleClass() - 切换样式，是在没有样式与指定样式之间切换，只接受一个参数
         -hasClass() - 判断有无样式：判断指定元素是否包含指定样式
         -css() - 操作样式
            -设置：
               - css(name,value)
               - css(options)：options - 选项：例如css({name : value,name : value, ...})
            -获取 - css(name)
      3、遍历节点
         -parent() - 获取指定节点的父节点
         -children() - 获取指定节点的所有子节点
         -next() - 获取指定节点的下一个兄弟节点
         -prev() - 获取指定节点的上一个兄弟节点
         -siblings() - 获取指定节点的所有兄弟节点
         -find(expr) - 在指定节点中查找指定内容：注意 - 查找指定节点的后代节点
      4、创建节点
         -元素节点 - $("HTML代码")
         -文本节点 - text()
         -属性节点 - attr()
         -jQuery - $("HTML代码")：上面三段代码相当于这一句代码--这方法注意字符串的拼接
      5、删除节点
         -remove() - 删除自身及后代节点
         -empty() - (清空)删除后代节点,但保留自身节点
      6、插入节点
         -内部插入：插入在指定元素内（标签）
            append
	    prepend
	    appendTo
	    prependTo
         -外部插入：插入在指定元素外（标签）
	    before
	    after
	    insertBefore
	    insertAfter(这个方法是jQuery有，DOM中没有的方法)
      7、替换节点
         -repalceWith：前面的元素是要被替换的元素
         -replaceAll - 就是颠倒了的repalceWith
      8、复制节点
         -jQuery - clone(boolean)：boolean参数 - 表示是否复制事件
         -DOM - cloneNode(boolean)：boolean参数 - 表示是否复制后代节点
二、事件
   -ready() - 类似于window.onload的作用
      1、写法：3种方法一定要会
         -$(document).ready(function(){});
         -$().ready(function(){});
         -$(function(){});
      2、ready与onload的区别
         -ready：具有简写方式；在一个HTML页面中允许多个；等待HTML页面中所有DOM结构加载完毕后就可以执行
         -onload：没有简写方式；在一个HTML页面中只能一个；必须等待HTML页面中所有内容全部加载完毕后才能执行
   -事件绑定与解绑
      1、bind(type,data,fn) - 绑定事件
         -type - 指定绑定的事件名称：
	    -单事件绑定：指定耽搁时间名称
	    -绑定多个事件：事件名称之间使用空格隔开
         -data - 可选项,作为event.data属性值传递给事件对象的额外数据对象
         -fn - 绑定事件的处理函数
      2、unbind() - 解绑事件
         -type - 指定解绑的事件名称
            -默认不传递任何内容 - 解绑所有事件
            -指定单个事件名称 - 解绑单个事件
            -指定多个事件名称 - 解绑多个事件
	 -fn：绑定事件的处理函数
         -绑定与解绑允许指定哪些事件?
	    blur, focus, focusin, focusout, load, resize, scroll, unload, click, dblclick,mousedown, mouseup, mousemove, mouseover, mouseout, mouseenter, mouseleave, change, select,submit, keydown, keypress, keyup, error 。 
      注意：所谓的click()事件是bind('click')的简写方式
   -事件对象(event)：事件对象被封装在事件对应的处理函数的参数
      -ele.onclick = function(event){event}
      -常用用法
         1、pageX/clientX/offsetX/x - 当前x轴
         2、pageY/clientY/offsetY/y - 当前y轴
         3、target - 当前绑定事件的源对象(元素)
         4、returnValue - 返回值,Boolean类型
         5、return false - 阻止页面的默认行为
         6、which/keyCode/charCode - 键盘对应值
      -事件冒泡：捕获，冒泡
      -模拟事件(了解)：trigger()
      -事件切换
         -hover(over,out)方法：模拟鼠标悬停事件，效果上与mouseover与mouseout是一样的
            -over - onmouseover事件的处理函数
            -out - onmouseout事件的处理函数
回顾内容
   原生DOM绑定事件三种
      1、在HTML页面元素中指定事件名称
      2、在javascript代码中
         -element.onclick = function(){}
         -element.addEventListener("click",function(){});
   定义字符串的方式：2中
      1、var str1="";--""换成''也行，js中""和''含义是一样的(其他语言中""和''含义不一样：""表示字符串，''表示字符)
      2、var str2=new String();

第三天：

一、动画效果：
   1、显示与隐藏：
      -show():显示
         -show()无参版本：不具备动画效果
	 -show(speed,[callback])有参版本：具有动画--[]内容表示可以省略
	    -speed:设置动画执行的时长，单位是毫秒--三个预定义值：slow/normal/fast
	    -callback：当动画执行完毕后的函数
      -hide():隐藏
         -hide():无参版本，不具备动画效果
	 -hide(speed,[callback])有参版本：具有动画--[]内容表示可以省略
	    -speed:设置动画执行的时长，单位是毫秒--三个预定义值：slow/normal/fast
	    -callback：当动画执行完毕后的函数
   2、滑动效果：
      -slideUp():向上滑动--可以不传递参数，底层具有默认时长
         -slideUp(speed,[callback])有参版本：具有动画--[]内容表示可以省略
	    -speed:设置动画执行的时长，单位是毫秒--三个预定义值：slow/normal/fast
	    -callback：当动画执行完毕后的函数
      -slideDown():向下滑动--可以不传递参数，底层具有默认时长
         -slideDow(speed,[callback])有参版本：具有动画--[]内容表示可以省略
	    -speed:设置动画执行的时长，单位是毫秒--三个预定义值：slow/normal/fast
	    -callback：当动画执行完毕后的函数
   3、当入淡出：
      -fadeIn():淡入--可以不传递参数，底层具有默认时长
         -fadeIn(speed,[callback])有参版本：具有动画--[]内容表示可以省略
	    -speed:设置动画执行的时长，单位是毫秒--三个预定义值：slow/normal/fast
	    -callback：当动画执行完毕后的函数
      -fadeOut():淡出--可以不传递参数，底层具有默认时长
         -fadeOut(speed,[callback])有参版本：具有动画--[]内容表示可以省略
	    -speed:设置动画执行的时长，单位是毫秒--三个预定义值：slow/normal/fast
	    -callback：当动画执行完毕后的函数
      -fadeTo() - 将当前元素透明度从一个值到另一个值
   4、自定义动画效果：
      -语法1：animate(params, [duration], [easing], [callback])
	 -params：设置动画执行的样式(css的属性)的集合--写法：{name : value,name : value, ...}
         -duration：设置动画执行的时长，单位为毫秒--三个预定义值：slow/normal/fast
         -easing：设置要使用的擦除效果的名称（暂时不适用）
         -callback：设置当动画执行完毕后的函数
      -语法2：animate(params, options)
         -params：设置动画执行的样式(css的属性)的集合--写法：{name : value,name : value, ...}
	 -options：一组包含动画选项的值的集合
	    -duration：(默认值: "normal") 三种预定速度之一的字符串(slow/normal/fast)或表示动画时长的毫秒数值(如：1000)
	    -easing：设置要使用的擦除效果的名称（暂时不适用）
	    -complete：在动画完成时执行的函数
	    -queue：(默认值: true) 设定为false将使此动画不进入动画队列 
      -并发与排队效果：
         -并发效果 - 多个动画效果同时执行
            animate({attrName1 : attrValue1,attrName2 : attrValue2,...},time);
            aniamte({attrName:attrValue},{duration:time}).aniamte({attrName:attrValue},{duration:time,queue:false});
         -排队效果 - 多个动画效果按照先后顺序执行
            animate({attrName:attrValue},time).animate({attrName:attrValue},time).animate({attrName:attrValue},time)...
     -切换动画
         -toggle();--相当于show()+hide()
         -slideToggle();--相当于slideUp()+slideDown()
二、类(类似)数组操作：jQuery对象是数组对象
   -查看jQuery底层代码，证明jQuery是数组对象
     var jQuery = function( selector, context ) {
	return new jQuery.fn.init( selector, context );
     }
     var init = jQuery.fn.init = function(selector,context){
        return jQuery.makeArray( selector, this );
     }
     var makeArray = function(arr,results){
        var ret = [];
	return ret;
     }
     window.jQuery = window.$ = jQuery;
      -数组属性：length-获取当前数组的长度(当前jQuery对象包含多少个DOM对象)
      -方法
         -get(index)：根据角标返回DOM对象
         -eq(index)：根据角标返回DOM对象--与eq()选择器的作用一致
         -index(obj)：根据DOM对象返回对应角标
   -隐式迭代
      -隐式迭代 - jQuery的遍历：在遍历的过程中,只关注入口和出口
	 比如：
	    var arr = [];// 数组就是入口
	    for(var i=0;i<arr.length;i++){
	       var ele = arr[i];// 数组的每个元素就是出口
	    }
      -显式迭代 - 例如for循环：在遍历的过程中,从开始到结束控制遍历的所有过程
   -jQuery的遍历：2种方法
      -$().each(callback);--对象方法
	 -callback-回调函数：function(index,domEle){}
	    index：当前遍历数组或对象的索引值
	    domEle：遍历数组或对象得到的每个元素(DOM对象)
      -$.each(obj,callback);--全局函数
	 -obj - 需要遍历的数组或对象
	 -callback - 回调函数：function(index,domEle){}
	    index - 遍历数组或对象的索引值
	    domEle - 遍历数组或对象得到的每个元素(DOM对象)
   -支持插件：插件的作用是为了扩展或简化jQuery的开发，数量多
      -地址：http://plugins.jquery.com
      -学习插件的目的：
         1、掌握jQuery插件的使用方法
	 2、掌握如何学习jquery插件的使用
      -日历插件 - My97DatePicker(国产)
         -目录说明
            -lang - 存储国际化(i18n)文件
            -本地化(i10n)
            -skin - 皮肤(日历控件长什么样子)
            -calendar.js - 日期库主文件
            -WdatePicker.js - 配置文件
      -使用My97日历插件的步骤
         1、拷贝My97DatePicker文件夹
         2、在HTML页面引入文件
         3、引入jQuery文件
         4、引入插件文件
         5、在HTML页面定义容器(元素)--作用：用于在页面中显示的效果
         6、在javascript代码使用插件提供的API方法
	 注意 - 不能随意修改My97DatePicker目录中任何内容
         

扩展内容：
   -Web前端
      页面设计师 - UI设计师
      Web前端 - 逻辑(页面特效)
   -this的用法
      1、在具有上下文环境中使用this--this指代上下文环境
      2、在javascript创建构造器时使用this--this指代new之后的对象
      3、在jQuery中的隐式迭代中使用this--this指代DOM对象(页面元素)
      注意：this的用法是javascript整个内容中最难的部分，建议会就用,不会就别用